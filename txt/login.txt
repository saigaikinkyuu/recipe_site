const firebaseConfig = {
    apiKey: "AIzaSyDzslg1WbmtYBNFtR3BrrHVvXYTeqanDr8",
    authDomain: "home-recipe-be23b.firebaseapp.com",
    projectId: "home-recipe-be23b",
    storageBucket: "home-recipe-be23b.firebasestorage.app",
    messagingSenderId: "801879261323",
    appId: "1:801879261323:web:0d2f9552d1058ee99d948e",
    measurementId: "G-Y12V9FEK27"
};

const app = firebase.initializeApp(firebaseConfig);
const auth = app.auth();
const db = app.firestore();

function Main(){
    const email = document.querySelector("#email");
    const pass = document.querySelector("#password");
    const submit = document.querySelector("#submit");

    submit.addEventListener('click' , () => {
        if(!email.value && !pass.value) return
        auth.signInWithEmailAndPassword(email.value, pass.value)
        .catch(error => {
            alert(error.message);
        });
    })
}

auth.onAuthStateChanged(async (user) => {
    if (user) {
        window.location.href = "../";
        const response = await callapi('login',{},user.currentUser);
        await setSafeCookie('token', response.token, 100);
    }else {
        Main();
    }
})

async function callapi(action, body, uid) {
    if (!idToken) {
        throw new Error("Not authenticated");
    }

    const res = await fetch(`https://firebaseapidataserver.netlify.app/.netlify/functions/api/${action}`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${idToken}`,
            "uid": uid
        },
        body: JSON.stringify(body),
    });

    if (!res.ok) {
        const error = await res.json();
        throw new Error(error.error || "API request failed");
    }

    res.json().then(async (user) => {
        return user;
    })
}

async function setSafeCookie(name, value, days) {
    let expires = "";
    if (days) {
        const date = new Date();
        date.setTime(date.getTime() + (years * 365 * 24 * 60 * 60 * 1000));
        expires = "; expires=" + date.toUTCString();
    }

    const encodedValue = encodeURIComponent(value);

    document.cookie = 
        `${name}=${encodedValue}${expires}; path=/; SameSite=Strict; Secure`;
}